apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-cm 
  namespace: grafana 
data:
  values.yaml: |
    global:
      image:
        # -- Overrides the Docker registry globally for all images
        registry: null
      # -- Overrides the priorityClassName for all pods
      priorityClassName: null
      # -- configures cluster domain ("cluster.local" by default)
      clusterDomain: "cluster.local"
      # -- configures DNS service name
      dnsService: "kube-dns"
      # -- configures DNS service namespace
      dnsNamespace: "kube-system"
    imagePullSecrets: []
    kubectlImage:
      # -- The Docker registry
      registry: docker.io
      # -- Docker image repository
      repository: bitnami/kubectl
      # -- Overrides the image tag whose default is the chart's appVersion
      tag: null
      # -- Overrides the image tag with an image digest
      digest: null
      # -- Docker image pull policy
      pullPolicy: IfNotPresent
    loki:
      # Configures the readiness probe for all of the Loki pods
      readinessProbe:
        httpGet:
          path: /ready
          port: http-metrics
        initialDelaySeconds: 30
        timeoutSeconds: 1
      image:
        # -- The Docker registry
        registry: docker.io
        # -- Docker image repository
        repository: grafana/loki
        # -- Overrides the image tag whose default is the chart's appVersion
        # TODO: needed for 3rd target backend functionality
        # revert to null or latest once this behavior is relased
        tag: null
        # -- Overrides the image tag with an image digest
        digest: null
        # -- Docker image pull policy
        pullPolicy: IfNotPresent
      podSecurityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      # -- The SecurityContext for Loki containers
      containerSecurityContext:
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        allowPrivilegeEscalation: false
      # -- Should enableServiceLinks be enabled. Default to enable
      enableServiceLinks: true
      # -- Specify an existing secret containing loki configuration. If non-empty, overrides `loki.config`
      existingSecretForConfig: ""
      # -- Defines what kind of object stores the configuration, a ConfigMap or a Secret.
      # In order to move sensitive information (such as credentials) from the ConfigMap/Secret to a more secure location (e.g. vault), it is possible to use [environment variables in the configuration](https://grafana.com/docs/loki/latest/configuration/#use-environment-variables-in-the-configuration).
      # Such environment variables can be then stored in a separate Secret and injected via the global.extraEnvFrom value. For details about environment injection from a Secret please see [Secrets](https://kubernetes.io/docs/concepts/configuration/secret/#use-case-as-container-environment-variables).
      configStorageType: ConfigMap
      # -- Name of the Secret or ConfigMap that contains the configuration (used for naming even if config is internal).
      externalConfigSecretName: '{{ include "loki.name" . }}'
      # -- Config file contents for Loki
      # @default -- See values.yaml
      config: |
        {{- if .Values.enterprise.enabled}}
        {{- tpl .Values.enterprise.config . }}
        {{- else }}
        auth_enabled: {{ .Values.loki.auth_enabled }}
        {{- end }}

        {{- with .Values.loki.server }}
        server:
          {{- toYaml . | nindent 2}}
        {{- end}}

        memberlist:
        {{- if .Values.loki.memberlistConfig }}
          {{- toYaml .Values.loki.memberlistConfig | nindent 2 }}
        {{- else }}
        {{- if .Values.loki.extraMemberlistConfig}}
        {{- toYaml .Values.loki.extraMemberlistConfig | nindent 2}}
        {{- end }}
          join_members:
            - {{ include "loki.memberlist" . }}
            {{- with .Values.migrate.fromDistributed }}
            {{- if .enabled }}
            - {{ .memberlistService }}
            {{- end }}
            {{- end }}
        {{- end }}

        {{- with .Values.loki.ingester }}
        ingester:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- if .Values.loki.commonConfig}}
        common:
        {{- toYaml .Values.loki.commonConfig | nindent 2}}
          storage:
          {{- include "loki.commonStorageConfig" . | nindent 4}}
        {{- end}}

        {{- with .Values.loki.limits_config }}
        limits_config:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        runtime_config:
          file: /etc/loki/runtime-config/runtime-config.yaml

        {{- with .Values.loki.memcached.chunk_cache }}
        {{- if and .enabled (or .host .addresses) }}
        chunk_store_config:
          chunk_cache_config:
            memcached:
              batch_size: {{ .batch_size }}
              parallelism: {{ .parallelism }}
            memcached_client:
              {{- if .host }}
              host: {{ .host }}
              {{- end }}
              {{- if .addresses }}
              addresses: {{ .addresses }}
              {{- end }}
              service: {{ .service }}
        {{- end }}
        {{- end }}

        {{- if .Values.loki.schemaConfig }}
        schema_config:
        {{- toYaml .Values.loki.schemaConfig | nindent 2}}
        {{- else }}
        schema_config:
          configs:
            - from: 2022-01-11
              store: boltdb-shipper
              object_store: {{ .Values.loki.storage.type }}
              schema: v12
              index:
                prefix: loki_index_
                period: 24h
        {{- end }}

        {{ include "loki.rulerConfig" . }}

        {{- if or .Values.tableManager.retention_deletes_enabled .Values.tableManager.retention_period }}
        table_manager:
          retention_deletes_enabled: {{ .Values.tableManager.retention_deletes_enabled }}
          retention_period: {{ .Values.tableManager.retention_period }}
        {{- end }}

        {{- with .Values.loki.memcached.results_cache }}
        query_range:
          align_queries_with_step: true
          {{- if and .enabled (or .host .addresses) }}
          cache_results: {{ .enabled }}
          results_cache:
            cache:
              default_validity: {{ .default_validity }}
              memcached_client:
                {{- if .host }}
                host: {{ .host }}
                {{- end }}
                {{- if .addresses }}
                addresses: {{ .addresses }}
                {{- end }}
                service: {{ .service }}
                timeout: {{ .timeout }}
          {{- end }}
        {{- end }}

        {{- with .Values.loki.storage_config }}
        storage_config:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- with .Values.loki.query_scheduler }}
        query_scheduler:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- with .Values.loki.compactor }}
        compactor:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- with .Values.loki.analytics }}
        analytics:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- with .Values.loki.querier }}
        querier:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- with .Values.loki.index_gateway }}
        index_gateway:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- with .Values.loki.frontend }}
        frontend:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- with .Values.loki.frontend_worker }}
        frontend_worker:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        {{- with .Values.loki.distributor }}
        distributor:
          {{- tpl (. | toYaml) $ | nindent 4 }}
        {{- end }}

        tracing:
          enabled: {{ .Values.loki.tracing.enabled }}
      # Should authentication be enabled
      auth_enabled: true
      # -- memberlist configuration (overrides embedded default)
      memberlistConfig: {}
      # -- Extra memberlist configuration
      extraMemberlistConfig: {}
      # -- Tenants list to be created on nginx htpasswd file, with name and password keys
      tenants: []
      # -- Check https://grafana.com/docs/loki/latest/configuration/#server for more info on the server configuration.
      server:
        http_listen_port: 3100
        grpc_listen_port: 9095
      # -- Limits config
      limits_config:
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        max_cache_freshness_per_query: 10m
        split_queries_by_interval: 15m
      # -- Provides a reloadable runtime configuration file for some specific configuration
      runtimeConfig: {}
      # -- Check https://grafana.com/docs/loki/latest/configuration/#common_config for more info on how to provide a common configuration
      commonConfig:
        path_prefix: /var/loki
        replication_factor: 3
        compactor_address: '{{ include "loki.compactorAddress" . }}'
      # -- Storage config. Providing this will automatically populate all necessary storage configs in the templated config.
      storage:
        bucketNames:
          chunks: chunks
          ruler: ruler
          admin: admin
        type: s3
        s3:
          s3: null
          endpoint: null
          region: null
          secretAccessKey: null
          accessKeyId: null
          signatureVersion: null
          s3ForcePathStyle: false
          insecure: false
          http_config: {}
          # -- Check https://grafana.com/docs/loki/latest/configure/#s3_storage_config for more info on how to provide a backoff_config
          backoff_config: {}
        gcs:
          chunkBufferSize: 0
          requestTimeout: "0s"
          enableHttp2: true
        azure:
          accountName: null
          accountKey: null
          connectionString: null
          useManagedIdentity: false
          useFederatedToken: false
          userAssignedId: null
          requestTimeout: null
          endpointSuffix: null
        swift:
          auth_version: null
          auth_url: null
          internal: null
          username: null
          user_domain_name: null
          user_domain_id: null
          user_id: null
          password: null
          domain_id: null
          domain_name: null
          project_id: null
          project_name: null
          project_domain_id: null
          project_domain_name: null
          region_name: null
          container_name: null
          max_retries: null
          connect_timeout: null
          request_timeout: null
        filesystem:
          chunks_directory: /var/loki/chunks
          rules_directory: /var/loki/rules
      # -- Configure memcached as an external cache for chunk and results cache. Disabled by default
      # must enable and specify a host for each cache you would like to use.
      memcached:
        chunk_cache:
          enabled: false
          host: ""
          service: "memcached-client"
          batch_size: 256
          parallelism: 10
        results_cache:
          enabled: false
          host: ""
          service: "memcached-client"
          timeout: "500ms"
          default_validity: "12h"
      # -- Check https://grafana.com/docs/loki/latest/configuration/#schema_config for more info on how to configure schemas
      schemaConfig: {}
      # -- Check https://grafana.com/docs/loki/latest/configuration/#ruler for more info on configuring ruler
      rulerConfig: {}
      # -- Structured loki configuration, takes precedence over `loki.config`, `loki.schemaConfig`, `loki.storageConfig`
      structuredConfig: {}
      # -- Additional query scheduler config
      query_scheduler: {}
      # -- Additional storage config
      storage_config:
        hedging:
          at: "250ms"
          max_per_second: 20
          up_to: 3
      # --  Optional compactor configuration
      compactor: {}
      # --  Optional analytics configuration
      analytics: {}
      # --  Optional querier configuration
      querier: {}
      # --  Optional ingester configuration
      ingester: {}
      # --  Optional index gateway configuration
      index_gateway:
        mode: ring
      frontend:
        scheduler_address: '{{ include "loki.querySchedulerAddress" . }}'
      frontend_worker:
        scheduler_address: '{{ include "loki.querySchedulerAddress" . }}'
      # -- Optional distributor configuration
      distributor: {}
      # -- Enable tracing
      tracing:
        enabled: false
    enterprise:
      # Enable enterprise features, license must be provided
      enabled: false
      # Default verion of GEL to deploy
      version: v1.8.6
      # -- Optional name of the GEL cluster, otherwise will use .Release.Name
      # The cluster name must match what is in your GEL license
      cluster_name: null
      # -- Grafana Enterprise Logs license
      # In order to use Grafana Enterprise Logs features, you will need to provide
      # the contents of your Grafana Enterprise Logs license, either by providing the
      # contents of the license.jwt, or the name Kubernetes Secret that contains your
      # license.jwt.
      # To set the license contents, use the flag `--set-file 'enterprise.license.contents=./license.jwt'`
      license:
        contents: "NOTAVALIDLICENSE"
      # -- Set to true when providing an external license
      useExternalLicense: false
      # -- Name of external license secret to use
      externalLicenseName: null
      # -- Name of the external config secret to use
      externalConfigName: ""
      # -- If enabled, the correct admin_client storage will be configured. If disabled while running enterprise,
      # make sure auth is set to `type: trust`, or that `auth_enabled` is set to `false`.
      adminApi:
        enabled: true
      # enterprise specific sections of the config.yaml file
      config: |
        {{- if .Values.enterprise.adminApi.enabled }}
        {{- if or .Values.minio.enabled (eq .Values.loki.storage.type "s3") (eq .Values.loki.storage.type "gcs") (eq .Values.loki.storage.type "azure") }}
        admin_client:
          storage:
            s3:
              bucket_name: {{ .Values.loki.storage.bucketNames.admin }}
        {{- end }}
        {{- end }}
        auth:
          type: {{ .Values.enterprise.adminApi.enabled | ternary "enterprise" "trust" }}
        auth_enabled: {{ .Values.loki.auth_enabled }}
        cluster_name: {{ include "loki.clusterName" . }}
        license:
          path: /etc/loki/license/license.jwt
      image:
        # -- The Docker registry
        registry: docker.io
        # -- Docker image repository
        repository: grafana/enterprise-logs
        # -- Docker image tag
        tag: null
        # -- Overrides the image tag with an image digest
        digest: null
        # -- Docker image pull policy
        pullPolicy: IfNotPresent
      adminToken:
        # -- Alternative name for admin token secret, needed by tokengen and provisioner jobs
        secret: null
        # -- Additional namespace to also create the token in. Useful if your Grafana instance
        # is in a different namespace
        additionalNamespaces: []
      # -- Alternative name of the secret to store token for the canary
      canarySecret: null
      # -- Configuration for `tokengen` target
      tokengen:
        # -- Whether the job should be part of the deployment
        enabled: true
        # -- Comma-separated list of Loki modules to load for tokengen
        targetModule: "tokengen"
        # -- Additional CLI arguments for the `tokengen` target
        extraArgs: []
        # -- Additional Kubernetes environment
        env: []
        # -- Additional labels for the `tokengen` Job
        labels: {}
        # -- Additional annotations for the `tokengen` Job
        annotations: {}
        # -- Tolerations for tokengen Job
        tolerations: []
        # -- Additional volumes for Pods
        extraVolumes: []
        # -- Additional volume mounts for Pods
        extraVolumeMounts: []
        # -- Run containers as user `enterprise-logs(uid=10001)`
        securityContext:
          runAsNonRoot: true
          runAsGroup: 10001
          runAsUser: 10001
          fsGroup: 10001
        # -- Environment variables from secrets or configmaps to add to the tokengen pods
        extraEnvFrom: []
        # -- The name of the PriorityClass for tokengen Pods
        priorityClassName: ""
      # -- Configuration for `provisioner` target
      provisioner:
        # -- Whether the job should be part of the deployment
        enabled: true
        # -- Name of the secret to store provisioned tokens in
        provisionedSecretPrefix: null
        # -- Additional tenants to be created. Each tenant will get a read and write policy
        # and associated token. Tenant must have a name and a namespace for the secret containting
        # the token to be created in. For example
        # additionalTenants:
        #   - name: loki
        #     secretNamespace: grafana
        additionalTenants: []
        # -- Additional Kubernetes environment
        env: []
        # -- Additional labels for the `provisioner` Job
        labels: {}
        # -- Additional annotations for the `provisioner` Job
        annotations: {}
        # -- The name of the PriorityClass for provisioner Job
        priorityClassName: null
        # -- Run containers as user `enterprise-logs(uid=10001)`
        securityContext:
          runAsNonRoot: true
          runAsGroup: 10001
          runAsUser: 10001
          fsGroup: 10001
        # -- Provisioner image to Utilize
        image:
          # -- The Docker registry
          registry: docker.io
          # -- Docker image repository
          repository: grafana/enterprise-logs-provisioner
          # -- Overrides the image tag whose default is the chart's appVersion
          tag: null
          # -- Overrides the image tag with an image digest
          digest: null
          # -- Docker image pull policy
          pullPolicy: IfNotPresent
        # -- Volume mounts to add to the provisioner pods
        extraVolumeMounts: []
    # -- Options that may be necessary when performing a migration from another helm chart
    migrate:
      # -- When migrating from a distributed chart like loki-distributed or enterprise-logs
      fromDistributed:
        # -- Set to true if migrating from a distributed helm chart
        enabled: false
        # -- If migrating from a distributed service, provide the distributed deployment's
        # memberlist service DNS so the new deployment can join its ring.
        memberlistService: ""
    serviceAccount:
      # -- Specifies whether a ServiceAccount should be created
      create: true
      # -- The name of the ServiceAccount to use.
      # If not set and create is true, a name is generated using the fullname template
      name: null
      # -- Image pull secrets for the service account
      imagePullSecrets: []
      # -- Annotations for the service account
      annotations: {}
      # -- Labels for the service account
      labels: {}
      # -- Set this toggle to false to opt out of automounting API credentials for the service account
      automountServiceAccountToken: true
    # RBAC configuration
    rbac:
      # -- If pspEnabled true, a PodSecurityPolicy is created for K8s that use psp.
      pspEnabled: false
      # -- For OpenShift set pspEnabled to 'false' and sccEnabled to 'true' to use the SecurityContextConstraints.
      sccEnabled: false
      # -- Specify PSP annotations
      # Ref: https://kubernetes.io/docs/reference/access-authn-authz/psp-to-pod-security-standards/#podsecuritypolicy-annotations
      pspAnnotations: {}
      # seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
      # seccomp.security.alpha.kubernetes.io/defaultProfileName: 'docker/default'
      # apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'
      # -- Whether to install RBAC in the namespace only or cluster-wide. Useful if you want to watch ConfigMap globally.
      namespaced: false
    # -- Section for configuring optional Helm test
    test:
      enabled: true
      # -- Address of the prometheus server to query for the test
      prometheusAddress: "http://prometheus:9090"
      # -- Number of times to retry the test before failing
      timeout: 1m
      # -- Additional labels for the test pods
      labels: {}
      # -- Additional annotations for test pods
      annotations: {}
      # -- Image to use for loki canary
      image:
        # -- The Docker registry
        registry: docker.io
        # -- Docker image repository
        repository: grafana/loki-helm-test
        # -- Overrides the image tag whose default is the chart's appVersion
        tag: null
        # -- Overrides the image tag with an image digest
        digest: null
        # -- Docker image pull policy
        pullPolicy: IfNotPresent
    # Monitoring section determines which monitoring features to enable
    monitoring:
      # Dashboards for monitoring Loki
      dashboards:
        # -- If enabled, create configmap with dashboards for monitoring Loki
        enabled: true
        # -- Alternative namespace to create dashboards ConfigMap in
        namespace: null
        # -- Additional annotations for the dashboards ConfigMap
        annotations: {}
        # -- Labels for the dashboards ConfigMap
        labels:
          grafana_dashboard: "1"
      # Recording rules for monitoring Loki, required for some dashboards
      rules:
        # -- If enabled, create PrometheusRule resource with Loki recording rules
        enabled: true
        # -- Include alerting rules
        alerting: true
        # -- Specify which individual alerts should be disabled
        # -- Instead of turning off each alert one by one, set the .monitoring.rules.alerting value to false instead.
        # -- If you disable all the alerts and keep .monitoring.rules.alerting set to true, the chart will fail to render.
        disabled: {}
        #  LokiRequestErrors: true
        #  LokiRequestPanics: true
        # -- Alternative namespace to create PrometheusRule resources in
        namespace: null
        # -- Additional annotations for the rules PrometheusRule resource
        annotations: {}
        # -- Additional labels for the rules PrometheusRule resource
        labels: {}
        # -- Additional labels for PrometheusRule alerts
        additionalRuleLabels: {}
        # -- Additional groups to add to the rules file
        additionalGroups: []
        # - name: additional-loki-rules
        #   rules:
        #     - record: job:loki_request_duration_seconds_bucket:sum_rate
        #       expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job)
        #     - record: job_route:loki_request_duration_seconds_bucket:sum_rate
        #       expr: sum(rate(loki_request_duration_seconds_bucket[1m])) by (le, job, route)
        #     - record: node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate
        #       expr: sum(rate(container_cpu_usage_seconds_total[1m])) by (node, namespace, pod, container)
      # ServiceMonitor configuration
      serviceMonitor:
        # -- If enabled, ServiceMonitor resources for Prometheus Operator are created
        enabled: true
        # -- Namespace selector for ServiceMonitor resources
        namespaceSelector: {}
        # -- ServiceMonitor annotations
        annotations: {}
        # -- Additional ServiceMonitor labels
        labels: {}
        # -- ServiceMonitor scrape interval
        # Default is 15s because included recording rules use a 1m rate, and scrape interval needs to be at
        # least 1/4 rate interval.
        interval: 15s
        # -- ServiceMonitor scrape timeout in Go duration format (e.g. 15s)
        scrapeTimeout: null
        # -- ServiceMonitor relabel configs to apply to samples before scraping
        # https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
        relabelings: []
        # -- ServiceMonitor metric relabel configs to apply to samples before ingestion
        # https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#endpoint
        metricRelabelings: []
        # -- ServiceMonitor will use http by default, but you can pick https as well
        scheme: http
        # -- ServiceMonitor will use these tlsConfig settings to make the health check requests
        tlsConfig: null
        # -- If defined, will create a MetricsInstance for the Grafana Agent Operator.
        metricsInstance:
          # -- If enabled, MetricsInstance resources for Grafana Agent Operator are created
          enabled: true
          # -- MetricsInstance annotations
          annotations: {}
          # -- Additional MetricsInstance labels
          labels: {}
          # -- If defined a MetricsInstance will be created to remote write metrics.
          remoteWrite: null
      # Self monitoring determines whether Loki should scrape its own logs.
      # This feature currently relies on the Grafana Agent Operator being installed,
      # which is installed by default using the grafana-agent-operator sub-chart.
      # It will create custom resources for GrafanaAgent, LogsInstance, and PodLogs to configure
      # scrape configs to scrape its own logs with the labels expected by the included dashboards.
      selfMonitoring:
        enabled: true
        # -- Tenant to use for self monitoring
        tenant:
          # -- Name of the tenant
          name: "self-monitoring"
          # -- Namespace to create additional tenant token secret in. Useful if your Grafana instance
          # is in a separate namespace. Token will still be created in the canary namespace.
          secretNamespace: "{{ .Release.Namespace }}"
        # Grafana Agent configuration
        grafanaAgent:
          # -- Controls whether to install the Grafana Agent Operator and its CRDs.
          # Note that helm will not install CRDs if this flag is enabled during an upgrade.
          # In that case install the CRDs manually from https://github.com/grafana/agent/tree/main/production/operator/crds
          installOperator: true
          # -- Grafana Agent annotations
          annotations: {}
          # -- Additional Grafana Agent labels
          labels: {}
          # -- Enable the config read api on port 8080 of the agent
          enableConfigReadAPI: false
          # -- The name of the PriorityClass for GrafanaAgent pods
          priorityClassName: null
          # -- Tolerations for GrafanaAgent pods
          tolerations: []
        # PodLogs configuration
        podLogs:
          # -- PodLogs version
          apiVersion: monitoring.grafana.com/v1alpha1
          # -- PodLogs annotations
          annotations: {}
          # -- Additional PodLogs labels
          labels: {}
          # -- PodLogs relabel configs to apply to samples before scraping
          # https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
          relabelings: []
        # LogsInstance configuration
        logsInstance:
          # -- LogsInstance annotations
          annotations: {}
          # -- Additional LogsInstance labels
          labels: {}
          # -- Additional clients for remote write
          clients: null
      # The Loki canary pushes logs to and queries from this loki installation to test
      # that it's working correctly
      lokiCanary:
        enabled: true
        replicas: 1
    # Configuration for the write pod(s)
    write:
      # -- Number of replicas for the write
      replicas: 1
      affinity: |
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  {{- include "loki.writeSelectorLabels" . | nindent 10 }}
              topologyKey: kubernetes.io/hostname
      podManagementPolicy: "Parallel"
      persistence:
        volumeClaimsEnabled: true
        dataVolumeParameters:
          emptyDir: {}
        enableStatefulSetAutoDeletePVC: false
        size: 5Gi
        storageClass: nfs-k8s-keep 
    # Configuration for the table-manager
    tableManager:
      # -- Specifies whether the table-manager should be enabled
      enabled: false
    # Configuration for the read pod(s)
    read:
      # -- Number of replicas for the read
      replicas: 1
      persistence:
        enableStatefulSetAutoDeletePVC: true
        size: 5Gi
        storageClass: nfs-k8s-keep 
        # -- Selector for persistent disk
        selector: null
    # Configuration for the backend pod(s)
    backend:
      # -- Number of replicas for the backend
      replicas: 1
      persistence:
        # -- Enable volume claims in pod spec
        volumeClaimsEnabled: true
        # -- Parameters used for the `data` volume when volumeClaimEnabled if false
        dataVolumeParameters:
          emptyDir: {}
        # -- Enable StatefulSetAutoDeletePVC feature
        enableStatefulSetAutoDeletePVC: true
        # -- Size of persistent disk
        size: 5Gi
        storageClass: nfs-k8s-keep 
        # -- Selector for persistent disk
        selector: null
    # Configuration for the single binary node(s)
    singleBinary:
      # -- Number of replicas for the single binary
      replicas: 0
    ingress:
      enabled: false
      ingressClassName: ""
      annotations: {}
      #    nginx.ingress.kubernetes.io/auth-type: basic
      #    nginx.ingress.kubernetes.io/auth-secret: loki-distributed-basic-auth
      #    nginx.ingress.kubernetes.io/auth-secret-type: auth-map
      #    nginx.ingress.kubernetes.io/configuration-snippet: |
      #      proxy_set_header X-Scope-OrgID $remote_user;
      labels: {}
      #    blackbox.monitoring.exclude: "true"
      paths:
        write:
          - /api/prom/push
          - /loki/api/v1/push
        read:
          - /api/prom/tail
          - /loki/api/v1/tail
          - /loki/api
          - /api/prom/rules
          - /loki/api/v1/rules
          - /prometheus/api/v1/rules
          - /prometheus/api/v1/alerts
        singleBinary:
          - /api/prom/push
          - /loki/api/v1/push
          - /api/prom/tail
          - /loki/api/v1/tail
          - /loki/api
          - /api/prom/rules
          - /loki/api/v1/rules
          - /prometheus/api/v1/rules
          - /prometheus/api/v1/alerts
      # -- Hosts configuration for the ingress, passed through the `tpl` function to allow templating
      hosts:
        - loki.example.com
      # -- TLS configuration for the ingress. Hosts passed through the `tpl` function to allow templating
      tls: []
    #    - hosts:
    #       - loki.example.com
    #      secretName: loki-distributed-tls

    # Configuration for the memberlist service
    memberlist:
      service:
        publishNotReadyAddresses: false
    # Configuration for the gateway
    gateway:
      # -- Specifies whether the gateway should be enabled
      enabled: false 
      # Basic auth configuration
      basicAuth:
        # -- Enables basic authentication for the gateway
        enabled: false
        # -- The basic auth username for the gateway
        username: null
        # -- The basic auth password for the gateway
        password: null
        # -- Uses the specified users from the `loki.tenants` list to create the htpasswd file
        # if `loki.tenants` is not set, the `gateway.basicAuth.username` and `gateway.basicAuth.password` are used
        # The value is templated using `tpl`. Override this to use a custom htpasswd, e.g. in case the default causes
        # high CPU load.
        htpasswd: >-
          {{ if .Values.loki.tenants }}

            {{- range $t := .Values.loki.tenants }}
          {{ htpasswd (required "All tenants must have a 'name' set" $t.name) (required "All tenants must have a 'password' set" $t.password) }}

            {{- end }}
          {{ else }} {{ htpasswd (required "'gateway.basicAuth.username' is required" .Values.gateway.basicAuth.username) (required "'gateway.basicAuth.password' is required" .Values.gateway.basicAuth.password) }} {{ end }}
        # -- Existing basic auth secret to use. Must contain '.htpasswd'
        existingSecret: null
      # Configures the readiness probe for the gateway
      readinessProbe:
        httpGet:
          path: /
          port: http
        initialDelaySeconds: 15
        timeoutSeconds: 1
      nginxConfig:
        # -- Enable listener for IPv6, disable on IPv4-only systems
        enableIPv6: true
        # -- NGINX log format
        logFormat: |-
          main '$remote_addr - $remote_user [$time_local]  $status '
                  '"$request" $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
        # -- Allows appending custom configuration to the server block
        serverSnippet: ""
        # -- Allows appending custom configuration to the http block, passed through the `tpl` function to allow templating
        httpSnippet: >-
          {{ if .Values.loki.tenants }}proxy_set_header X-Scope-OrgID $remote_user;{{ end }}
        # -- Override Read URL
        customReadUrl: null
        # -- Override Write URL
        customWriteUrl: null
        # -- Override Backend URL
        customBackendUrl: null
        # -- Allows overriding the DNS resolver address nginx will use.
        resolver: ""
        # -- Config file contents for Nginx. Passed through the `tpl` function to allow templating
        # @default -- See values.yaml
        file: |
          {{- include "loki.nginxFile" . | indent 2 -}}
    networkPolicy:
      # -- Specifies whether Network Policies should be created
      enabled: false
      # -- Specifies whether the policies created will be standard Network Policies (flavor: kubernetes)
      # or Cilium Network Policies (flavor: cilium)
      flavor: kubernetes
      metrics:
        # -- Specifies the Pods which are allowed to access the metrics port.
        # As this is cross-namespace communication, you also need the namespaceSelector.
        podSelector: {}
        # -- Specifies the namespaces which are allowed to access the metrics port
        namespaceSelector: {}
        # -- Specifies specific network CIDRs which are allowed to access the metrics port.
        # In case you use namespaceSelector, you also have to specify your kubelet networks here.
        # The metrics ports are also used for probes.
        cidrs: []
      ingress:
        # -- Specifies the Pods which are allowed to access the http port.
        # As this is cross-namespace communication, you also need the namespaceSelector.
        podSelector: {}
        # -- Specifies the namespaces which are allowed to access the http port
        namespaceSelector: {}
      alertmanager:
        # -- Specify the alertmanager port used for alerting
        port: 9093
        # -- Specifies the alertmanager Pods.
        # As this is cross-namespace communication, you also need the namespaceSelector.
        podSelector: {}
        # -- Specifies the namespace the alertmanager is running in
        namespaceSelector: {}
      externalStorage:
        # -- Specify the port used for external storage, e.g. AWS S3
        ports: []
        # -- Specifies specific network CIDRs you want to limit access to
        cidrs: []
      discovery:
        # -- (int) Specify the port used for discovery
        port: null
        # -- Specifies the Pods labels used for discovery.
        # As this is cross-namespace communication, you also need the namespaceSelector.
        podSelector: {}
        # -- Specifies the namespace the discovery Pods are running in
        namespaceSelector: {}
    minio:
      enabled: false

    sidecar:
      image:
        # -- The Docker registry and image for the k8s sidecar
        repository: kiwigrid/k8s-sidecar
        # -- Docker image tag
        tag: 1.24.3
        # -- Docker image sha. If empty, no sha will be used
        sha: ""
        # -- Docker image pull policy
        pullPolicy: IfNotPresent
      # -- Resource requests and limits for the sidecar
      resources: {}
      #   limits:
      #     cpu: 100m
      #     memory: 100Mi
      #   requests:
      #     cpu: 50m
      #     memory: 50Mi
      # -- The SecurityContext for the sidecar.
      securityContext: {}
      # -- Set to true to skip tls verification for kube api calls.
      skipTlsVerify: false
      # -- Ensure that rule files aren't conflicting and being overwritten by prefixing their name with the namespace they are defined in.
      enableUniqueFilenames: false
      # -- Readiness probe definition. Probe is disabled on the sidecar by default.
      readinessProbe: {}
      # -- Liveness probe definition. Probe is disabled on the sidecar by default.
      livenessProbe: {}
      rules:
        # -- Whether or not to create a sidecar to ingest rule from specific ConfigMaps and/or Secrets.
        enabled: true
        # -- Label that the configmaps/secrets with rules will be marked with.
        label: loki_rule
        # -- Label value that the configmaps/secrets with rules will be set to.
        labelValue: ""
        # -- Folder into which the rules will be placed.
        folder: /rules
        # -- Comma separated list of namespaces. If specified, the sidecar will search for config-maps/secrets inside these namespaces.
        # Otherwise the namespace in which the sidecar is running will be used.
        # It's also possible to specify 'ALL' to search in all namespaces.
        searchNamespace: null
        # -- Method to use to detect ConfigMap changes. With WATCH the sidecar will do a WATCH request, with SLEEP it will list all ConfigMaps, then sleep for 60 seconds.
        watchMethod: WATCH
        # -- Search in configmap, secret, or both.
        resource: both
        # -- Absolute path to the shell script to execute after a configmap or secret has been reloaded.
        script: null
        # -- WatchServerTimeout: request to the server, asking it to cleanly close the connection after that.
        # defaults to 60sec; much higher values like 3600 seconds (1h) are feasible for non-Azure K8S.
        watchServerTimeout: 60
        #
        # -- WatchClientTimeout: is a client-side timeout, configuring your local socket.
        # If you have a network outage dropping all packets with no RST/FIN,
        # this is how long your client waits before realizing & dropping the connection.
        # Defaults to 66sec.
        watchClientTimeout: 60
        # -- Log level of the sidecar container.
        logLevel: INFO
