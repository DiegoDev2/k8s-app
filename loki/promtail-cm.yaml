# https://kubernetes.io/docs/concepts/configuration/configmap/
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-cm 
  namespace: loki 
data:
  values.yaml: |
    daemonset:
      # -- Deploys Promtail as a DaemonSet
      enabled: true
      autoscaling:
        # -- Creates a VerticalPodAutoscaler for the daemonset
        enabled: false

    configmap:
      # -- If enabled, promtail config will be created as a ConfigMap instead of a secret
      enabled: false

    image:
      # -- The Docker registry
      registry: docker.io
      # -- Docker image repository
      repository: grafana/promtail
      # -- Overrides the image tag whose default is the chart's appVersion
      tag: null
      # -- Docker image pull policy
      pullPolicy: IfNotPresent

    rbac:
      # -- Specifies whether RBAC resources are to be created
      create: true
      # -- Specifies whether a PodSecurityPolicy is to be created
      pspEnabled: false

    serviceAccount:
      # -- Specifies whether a ServiceAccount should be created
      create: true
      # -- The name of the ServiceAccount to use.
      # If not set and `create` is true, a name is generated using the fullname template
      name: promtail-service 
      # -- Image pull secrets for the service account

    # -- Default volumes that are mounted into pods. In most cases, these should not be changed.
    # Use `extraVolumes`/`extraVolumeMounts` for additional custom volumes.
    # @default -- See `values.yaml`
    defaultVolumes:
      - name: run
        hostPath:
          path: /run/promtail
      - name: containers
        hostPath:
          path: /var/lib/docker/containers
      - name: pods
        hostPath:
          path: /var/log/pods

    # -- Default volume mounts. Corresponds to `volumes`.
    # @default -- See `values.yaml`
    defaultVolumeMounts:
      - name: run
        mountPath: /run/promtail
      - name: containers
        mountPath: /var/lib/docker/containers
        readOnly: true
      - name: pods
        mountPath: /var/log/pods
        readOnly: true

    # Extra volumes to be added in addition to those specified under `defaultVolumes`.
    extraVolumes: []

    # Extra volume mounts together. Corresponds to `extraVolumes`.
    extraVolumeMounts: []

    config:
      # -- Enable Promtail config from Helm chart
      # Set `configmap.enabled: true` and this to `false` to manage your own Promtail config
      # See default config in `values.yaml`
      enabled: true
      # -- The log level of the Promtail server
      # Must be reference in `config.file` to configure `server.log_level`
      # See default config in `values.yaml`
      logLevel: info
      # -- The log format of the Promtail server
      # Must be reference in `config.file` to configure `server.log_format`
      # Valid formats: `logfmt, json`
      # See default config in `values.yaml`
      logFormat: logfmt
      # -- The port of the Promtail server
      # Must be reference in `config.file` to configure `server.http_listen_port`
      # See default config in `values.yaml`
      serverPort: 3101
      # -- The config of clients of the Promtail server
      # Must be reference in `config.file` to configure `clients`
      # @default -- See `values.yaml`
      clients:
        - url: http://loki-gateway/loki/api/v1/push
      # -- Configures where Promtail will save it's positions file, to resume reading after restarts.
      # Must be referenced in `config.file` to configure `positions`
      positions:
        filename: /run/promtail/positions.yaml
      # -- The config to enable tracing
      enableTracing: false
      # -- A section of reusable snippets that can be reference in `config.file`.
      # Custom snippets may be added in order to reduce redundancy.
      # This is especially helpful when multiple `kubernetes_sd_configs` are use which usually have large parts in common.
      # @default -- See `values.yaml`
      snippets:
        pipelineStages:
          - cri: {}
        common:
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_node_name
            target_label: node_name
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            replacement: $1
            separator: /
            source_labels:
              - namespace
              - app
            target_label: job
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_name
            target_label: pod
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_container_name
            target_label: container
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
              - __meta_kubernetes_pod_uid
              - __meta_kubernetes_pod_container_name
            target_label: __path__
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            regex: true/(.*)
            separator: /
            source_labels:
              - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
              - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
              - __meta_kubernetes_pod_container_name
            target_label: __path__

        # If set to true, adds an additional label for the scrape job.
        # This helps debug the Promtail config.
        addScrapeJobLabel: false

        # -- You can put here any keys that will be directly added to the config file's 'limits_config' block.
        # @default -- empty
        extraLimitsConfig: ""

        # -- You can put here any keys that will be directly added to the config file's 'server' block.
        # @default -- empty
        extraServerConfigs: ""

        # -- You can put here any additional scrape configs you want to add to the config file.
        # @default -- empty
        extraScrapeConfigs: ""

        # -- You can put here any additional relabel_configs to "kubernetes-pods" job
        extraRelabelConfigs: []

        scrapeConfigs: |
          # See also https://github.com/grafana/loki/blob/master/production/ksonnet/promtail/scrape_config.libsonnet for reference
          - job_name: kubernetes-pods
            pipeline_stages:
              {{- toYaml .Values.config.snippets.pipelineStages | nindent 4 }}
            kubernetes_sd_configs:
              - role: pod
            relabel_configs:
              - source_labels:
                  - __meta_kubernetes_pod_controller_name
                regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
                action: replace
                target_label: __tmp_controller_name
              - source_labels:
                  - __meta_kubernetes_pod_label_app_kubernetes_io_name
                  - __meta_kubernetes_pod_label_app
                  - __tmp_controller_name
                  - __meta_kubernetes_pod_name
                regex: ^;*([^;]+)(;.*)?$
                action: replace
                target_label: app
              - source_labels:
                  - __meta_kubernetes_pod_label_app_kubernetes_io_instance
                  - __meta_kubernetes_pod_label_instance
                regex: ^;*([^;]+)(;.*)?$
                action: replace
                target_label: instance
              - source_labels:
                  - __meta_kubernetes_pod_label_app_kubernetes_io_component
                  - __meta_kubernetes_pod_label_component
                regex: ^;*([^;]+)(;.*)?$
                action: replace
                target_label: component
              {{- if .Values.config.snippets.addScrapeJobLabel }}
              - replacement: kubernetes-pods
                target_label: scrape_job
              {{- end }}
              {{- toYaml .Values.config.snippets.common | nindent 4 }}
              {{- with .Values.config.snippets.extraRelabelConfigs }}
              {{- toYaml . | nindent 4 }}
              {{- end }}

      # -- Config file contents for Promtail.
      # Must be configured as string.
      # It is templated so it can be assembled from reusable snippets in order to avoid redundancy.
      # @default -- See `values.yaml`
      file: |
        server:
          log_level: {{ .Values.config.logLevel }}
          log_format: {{ .Values.config.logFormat }}
          http_listen_port: {{ .Values.config.serverPort }}
          {{- with .Values.httpPathPrefix }}
          http_path_prefix: {{ . }}
          {{- end }}
          {{- tpl .Values.config.snippets.extraServerConfigs . | nindent 2 }}

        clients:
          {{- tpl (toYaml .Values.config.clients) . | nindent 2 }}

        positions:
          {{- tpl (toYaml .Values.config.positions) . | nindent 2 }}

        scrape_configs:
          {{- tpl .Values.config.snippets.scrapeConfigs . | nindent 2 }}
          {{- tpl .Values.config.snippets.extraScrapeConfigs . | nindent 2 }}

        limits_config:
          {{- tpl .Values.config.snippets.extraLimitsConfig . | nindent 2 }}

        tracing:
          enabled: {{ .Values.config.enableTracing }}

    networkPolicy:
      # -- Specifies whether Network Policies should be created
      enabled: false
      metrics:
        # -- Specifies the Pods which are allowed to access the metrics port.
        # As this is cross-namespace communication, you also neeed the namespaceSelector.
        podSelector: {}
        # -- Specifies the namespaces which are allowed to access the metrics port
        namespaceSelector: {}
        # -- Specifies specific network CIDRs which are allowed to access the metrics port.
        # In case you use namespaceSelector, you also have to specify your kubelet networks here.
        # The metrics ports are also used for probes.
        cidrs: []
      k8sApi:
        # -- Specify the k8s API endpoint port
        port: 8443
        # -- Specifies specific network CIDRs you want to limit access to
        cidrs: []

    # -- Base path to server all API routes fro
    httpPathPrefix: ""

    sidecar:
      configReloader:
        enabled: false
        image:
          # -- The Docker registry for sidecar config-reloader
          registry: docker.io
          # -- Docker image repository for sidecar config-reloader
          repository: jimmidyson/configmap-reload
          # -- Docker image tag for sidecar config-reloader
          tag: v0.8.0
          # -- Docker image pull policy for sidecar config-reloader
          pullPolicy: IfNotPresent
        # Extra args for the config-reloader container.
        extraArgs: []
        # -- Extra environment variables for sidecar config-reloader
        extraEnv: []
        # -- Extra environment variables from secrets or configmaps for sidecar config-reloader
        extraEnvFrom: []
        # -- The security context for containers for sidecar config-reloader
        containerSecurityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
          allowPrivilegeEscalation: false
        # -- Readiness probe for sidecar config-reloader
        readinessProbe: {}
        # -- Liveness probe for sidecar config-reloader
        livenessProbe: {}
        # -- Resource requests and limits for sidecar config-reloader
        resources: {}
        #  limits:
        #    cpu: 200m
        #    memory: 128Mi
        #  requests:
        #    cpu: 100m
        #    memory: 128Mi
        config:
          # -- The port of the config-reloader server
          serverPort: 9533
        serviceMonitor:
          enabled: true

    # -- Extra K8s manifests to deploy
    extraObjects: []
      # - apiVersion: "kubernetes-client.io/v1"
      #   kind: ExternalSecret
      #   metadata:
      #     name: promtail-secrets
      #   spec:
      #     backendType: gcpSecretsManager
      #     data:
      #       - key: promtail-oauth2-creds
      #         name: client_secret

---

